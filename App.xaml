<Application x:Class="ExtendedClipboard.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ExtendedClipboard"
             StartupUri="Views/ClipboardWindow.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="BackgroundGray" Color="#1A1A1A"/>
        <SolidColorBrush x:Key="BorderGray" Color="#444447"/>
        <SolidColorBrush x:Key="MouseOverColour" Color="#444447" Opacity="0.5"/>

        <!-- Window-->
        <Style TargetType="Window"
               x:Key="ClipboardWindow">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Topmost" Value="True"/>
            <Setter Property="WindowStyle" Value="None"/>
            <Setter Property="AllowsTransparency" Value="True"/>
            <Setter Property="ShowInTaskbar" Value="False"/>
        </Style>

        <!-- Clipboard Description -->
        <Style TargetType="TextBlock"
        x:Key="ClipboardText">
            <Setter Property="MaxHeight" Value="75"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="MaxWidth" Value="500"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="Background" Value="{StaticResource BackgroundGray}"/>
        </Style>


        <!-- Clipboard Title -->
        <Style TargetType="TextBox" 
        x:Key="ClipboardTitle">
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Background" Value="{StaticResource BackgroundGray}"/>
            <Setter Property="CaretBrush" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="0,0,0,3" BorderBrush="{StaticResource BorderGray}">
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Label-->
        <Style TargetType="Label"
               x:Key="SettingsLabel">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0,0,0,3"/>
        </Style>

        <!-- List Box -->
        <Style TargetType="ListBox">
            <Setter Property="BorderBrush" Value="{StaticResource BackgroundGray}"/>
        </Style>

        <Style TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Scroll Bar Thumb-->
        <Style TargetType="ScrollBar">
            <Setter Property="Background" Value="{StaticResource BackgroundGray}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb Margin="3,0,0,0">
                                    <Thumb.Style>
                                        <Style TargetType="Thumb">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Border Background="Gray" CornerRadius="5">
                                                            
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="15"/>
                    <Setter Property="MinWidth" Value="15"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Default Button -->
        <Style TargetType="Button">
            <Setter Property="Background" Value="{StaticResource BackgroundGray}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderGray}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{StaticResource BorderGray}" BorderThickness="0,1,0,1" >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource MouseOverColour}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Default ToggleButton -->
        <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderGray}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="0,0,0,3" BorderBrush="{StaticResource BorderGray}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource MouseOverColour}"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="{StaticResource MouseOverColour}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Add Clipboard Button-->
        <Style TargetType="Button"
               x:Key="AddButton">
            <Setter Property="Height" Value="35"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Background" Value="{StaticResource BackgroundGray}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderGray}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{StaticResource BorderGray}" BorderThickness="0,1,0,0" >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource MouseOverColour}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Save Button -->
        <Style TargetType="Button"
        x:Key="SaveButton">
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderGray}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{StaticResource BorderGray}" BorderThickness="0,2,2,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource MouseOverColour}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Retrieve Button -->
        <Style TargetType="Button"
         x:Key="RetrieveButton">
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderGray}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{StaticResource BorderGray}" BorderThickness="0,2,0,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource MouseOverColour}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Delete Button -->

        <Style TargetType="Button"
             x:Key="DeleteButton">
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderGray}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{StaticResource BorderGray}" BorderThickness="2,2,0,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource MouseOverColour}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Settings Button-->
        <Style TargetType="Button"
        x:Key="SettingsButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="15,0,0,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource MouseOverColour}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Minimize Button-->
        <Style TargetType="Button"
            x:Key="MinimizeButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="0,15,0,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource MouseOverColour}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Application.Resources>
</Application>
